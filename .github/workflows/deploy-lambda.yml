name: Deploy Lambda

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
          
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential python3-dev tree

      - name: Install AWS SAM CLI and build tools
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade setuptools wheel
          python -m pip install aws-sam-cli
      - name: Verify Project Structure
        run: |
          echo "Verificando estructura del proyecto..."
          if [ ! -d "layers" ]; then
            echo "Error: Directorio 'layers' no encontrado"
            exit 1
          fi
          if [ ! -d "layers/python" ]; then
            echo "Creando directorio layers/python..."
            mkdir -p layers/python
          fi
          if [ ! -f "layers/requirements.txt" ]; then
            echo "Error: Archivo layers/requirements.txt no encontrado"
            exit 1
          fi
          echo "Estructura del proyecto:"
          tree -a -I '.git|.aws-sam'
      - name: Build Lambda Layer
        run: |


          echo "Building Lambda Layer..."          pip install -r layers/requirements.txt -t layers/python/          make build-layer

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Check and Delete Failed Stack
        run: |
          if aws cloudformation describe-stacks --stack-name lambdas-init 2>/dev/null | grep -q 'ROLLBACK_COMPLETE'; then
            echo "Deleting failed stack..."
            aws cloudformation delete-stack --stack-name lambdas-init
            aws cloudformation wait stack-delete-complete --stack-name lambdas-init
          fi

      - name: SAM Build
        run: |
          echo "Running SAM build..."
          sam build --use-container
          echo "SAM build complete. Contents of .aws-sam:"
          ls -la .aws-sam/

      - name: SAM Deploy
        run: |
          echo "Starting SAM deploy..."
          
          # Ejecutar SAM deploy con --force-upload para evitar problemas de S3
          sam deploy \
            --template-file .aws-sam/build/template.yaml \
            --stack-name lambdas-init \
            --no-confirm-changeset \
            --no-fail-on-empty-changeset \
            --force-upload \
            --no-progressbar \
            --capabilities CAPABILITY_IAM \
            --parameter-overrides AuthTokenSecret=${{ secrets.AUTH_TOKEN_SECRET }} \
            --region ${{ secrets.AWS_REGION }} 2>&1 || true
          
          # Esperar un momento para asegurar que el stack se actualice
          sleep 10
          
          # Verificar el estado del stack
          STACK_STATUS=$(aws cloudformation describe-stacks \
            --stack-name lambdas-init \
            --query 'Stacks[0].StackStatus' \
            --output text)
          
          echo "Estado actual del stack: $STACK_STATUS"
          
          # Verificar si el estado es exitoso
          if [[ "$STACK_STATUS" == *"COMPLETE"* && "$STACK_STATUS" != *"ROLLBACK"* ]]; then
            echo "Despliegue exitoso. Obteniendo informaci√≥n del stack..."
            
            # Mostrar los outputs del stack
            echo "Outputs del stack:"
            aws cloudformation describe-stacks \
              --stack-name lambdas-init \
              --query 'Stacks[0].Outputs' \
              --output table
          else
            echo "Error en el despliegue. Estado final: $STACK_STATUS"
            exit 1
          fi